//Goal 1: Doing a connection with hsqldb
//Goal 2: Create a data base with name "BancoDeDados1"
//Goal 3: Create a table "TabelaTeste"
//Goal 4: Insert 2 lines in database "BancoDeDados1"


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

//Creating a connection with hsqldb
// 1) Putting the hsqldb.jar into the projetc
// 2) Add "build path to hsqldb.jar


public class TestaConexao {
	
	public static void main(String args[]) throws SQLException{
		
		//How to do a connection - Step by step
		  //1 - Uso o metodo "getConnection" que esta na classe "DriverManager". Esse metodo eh static e retorno uma "Connection"
		  //2 - Crio uma variavel do tipo "Connection" para receber o retorno do metodo que chamei
		  //3 - Adiciono "throws SQLException" ou seja, se der alguma SQL exception pare o programa
		  //4 - Feito!
		                                                     
															 //   |   Qual banco   | |Endereco||nome do banco| |Usuario e senha|         	
		Connection variavelDeConexao = DriverManager.getConnection("jdbc:hsqldb:hsql//localhost/BancoDeDados1","SA","");
		System.out.println("The connection is done :)");
		
		
		//Criando o banco de dados com o nome "BancoDeDados1" - Step by step
		  //1) Abrir o promt de comando do windows
		  //2) Usar o comando para criar o banco e o arquivo script que vai ficar no diretorio do projeto: "java -cp hsqldb.jar org.hsqldb.server.Server --dbname.0 BandoDeDados1 --database.0 file:arquivoBancoDeDados1"
          //3) Abrir um novo promt de comando do windows
          //4) Abrir a IDE do hsqldb: java -cp hsqldb.jar org.hsqldb.util.DatabaseManager
		  //5) Escolher a opcao "HSQLDB DataBase Enginer Server"
		  //6) No campo url, colocar: "jdbc:hsqldb:hsql://localhost/BancoDeDados1"
		  //7) Criar uma tabela: "CREATE TABLE TabelaTeste(id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, nome VARCHAR(255), descricao VARCHAR(255) )"
		  //8) Inserir duas linhas nessa tabela: "INSERT INTO TabelaTeste VALUES(1,'Geladeira', 'Geladeira duas portas')"
		
		
		Statement variavelStatement = variavelDeConexao.createStatement(); // nao entendi o pq dessa linha
		
		boolean resultado = variavelStatement.execute("select * from teste"); // True= se for devolvido uma lista de dados //False= Se devolver // quantas linhas foram alteradas
		System.out.println(resultado);

		
		
		ResultSet resultSet = variavelStatement.getResultSet(); //Pegar o resultado do select do tipo "ResultSet" que ficou guardado na "variavelStatement"
		
		while ( resultSet.next() ) { // Vai para o primeiro elemento

			// Pegando os valores do db
			String id = resultSet.getString("id"); // or int id =
													// resultSet.getInt("id");
			System.out.println(id);

			String nome = resultSet.getString("nome");
			System.out.println(nome);

			String descricao = resultSet.getString("descricao");
			System.out.println(descricao);
		}//while

		
		resultSet.close();         
		variavelStatement.close(); 
		variavelDeConexao.close(); //Closing the connection

		System.out.println("The connection is closed :)");
		
		
	}//main
}//TestaConexao
